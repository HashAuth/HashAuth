- utilize OIDC back-channel logout to synchronize OP session with RP sessions
    - this is a deseriable feature to protect against case where hedera accounts are traded (i.e. on hashnames)
        - example flow:
            - account 0.0.1 logs into Service A via hashauth
            - account 0.0.1 is sold on HashNames, thus now belonging to a different user. All sessions associated to this account should be 
                destroyed, since ownership has changed. Otherwise, old 0.0.1 owner has access to these services until session naturally expires.
            - HashNames notifies HashAuth of ownership transfer event via OAuth protected API with notify-ownership-transfer scope (client credentials)
            - HashAuth triggers back-channel logouts on all logged in clients for this account (supported by spec)
            - All sessions associated with this account are destroyed across all supported services/apps
